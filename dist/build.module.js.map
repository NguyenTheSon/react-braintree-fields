{"version":3,"file":"build.module.js","sources":["../src/api.js","../src/braintree.jsx","../src/field.jsx"],"sourcesContent":["import Braintree from 'braintree-web/client'\r\nimport HostedFields from 'braintree-web/hosted-fields'\r\nimport BraintreeDataCollector from 'braintree-web/data-collector'\r\nimport BraintreeThreeDSecure from 'braintree-web/three-d-secure';\r\n\r\nfunction cap(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport default class BraintreeClientApi {\r\n\r\n    fields = Object.create(null);\r\n\r\n    _nextFieldId = 0;\r\n\r\n    fieldHandlers = Object.create(null);\r\n\r\n    constructor({\r\n        authorization, styles, onAuthorizationSuccess, ...callbacks\r\n    }) {\r\n        this.styles = styles || {}\r\n        this.wrapperHandlers = callbacks || {}\r\n        this.setAuthorization(authorization, onAuthorizationSuccess)\r\n    }\r\n\r\n    setAuthorization(authorization, onAuthorizationSuccess) {\r\n        if (!authorization && this.authorization) {\r\n            this.teardown()\r\n        } else if (authorization && authorization !== this.authorization) {\r\n            // fields have not yet checked in, delay setting so they can register\r\n            if (0 === Object.keys(this.fields).length && !this.pendingAuthTimer) {\r\n                this.pendingAuthTimer = setTimeout(() => {\r\n                    this.pendingAuthTimer = null\r\n                    this.setAuthorization(authorization, onAuthorizationSuccess)\r\n                }, 5)\r\n                return\r\n            }\r\n\r\n            if (this.authorization) { this.teardown() }\r\n            this.authorization = authorization\r\n            Braintree.create({ authorization }, (err, clientInstance) => {\r\n                if (err) {\r\n                    this.onError(err)\r\n                } else {\r\n                    this.create(clientInstance, onAuthorizationSuccess)\r\n\r\n                    if (this.wrapperHandlers.threeDSecure) {\r\n                      console.log(\"BraintreeThreeDSecure\", BraintreeThreeDSecure, clientInstance)\r\n                      BraintreeThreeDSecure.create({\r\n                        version: 2, // Will use 3DS2 whenever possible\r\n                        client: clientInstance\r\n                      }, this.wrapperHandlers.threeDSecure);\r\n                    }\r\n\r\n                    if (this.wrapperHandlers.onDataCollectorInstanceReady) {\r\n                        BraintreeDataCollector.create({\r\n                            client: clientInstance,\r\n                            kount: true,\r\n                        }, this.wrapperHandlers.onDataCollectorInstanceReady)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    nextFieldId() {\r\n        this._nextFieldId += 1\r\n        return this._nextFieldId\r\n    }\r\n\r\n    onError(err) {\r\n        if (!err) { return }\r\n        if (this.wrapperHandlers.onError) { this.wrapperHandlers.onError(err) }\r\n    }\r\n\r\n    create(client, onAuthorizationSuccess) {\r\n        this.client = client\r\n        HostedFields.create({\r\n            client,\r\n            styles: this.styles,\r\n            fields: this.fields,\r\n        }, (err, hostedFields) => {\r\n            if (err) {\r\n                this.onError(err)\r\n                return\r\n            }\r\n            this.hostedFields = hostedFields;\r\n            [\r\n                'blur', 'focus', 'empty', 'notEmpty',\r\n                'cardTypeChange', 'validityChange',\r\n            ].forEach((eventName) => {\r\n                hostedFields.on(eventName, ev => this.onFieldEvent(`on${cap(eventName)}`, ev))\r\n            })\r\n            this.onError(err)\r\n\r\n            if (onAuthorizationSuccess) {\r\n                onAuthorizationSuccess()\r\n            }\r\n        })\r\n    }\r\n\r\n    teardown() {\r\n        if (this.hostedFields) { this.hostedFields.teardown() }\r\n        if (this.pendingAuthTimer) {\r\n            clearTimeout(this.pendingAuthTimer)\r\n            this.pendingAuthTimer = null\r\n        }\r\n    }\r\n\r\n    checkInField({\r\n        formatInput,\r\n        maxlength,\r\n        minlength,\r\n        placeholder,\r\n        select,\r\n        type,\r\n        prefill,\r\n        id = `braintree-field-wrapper-${this.nextFieldId()}`,\r\n        rejectUnsupportedCards,\r\n        ...handlers\r\n    }) {\r\n        const onRenderComplete = () => {\r\n            this.fieldHandlers[type] = handlers\r\n            this.fields[type] = {\r\n                formatInput,\r\n                maxlength,\r\n                minlength,\r\n                placeholder,\r\n                select,\r\n                prefill,\r\n                selector: `#${id}`,\r\n            }\r\n            if (('number' === type) && rejectUnsupportedCards) {\r\n                this.fields.number.rejectUnsupportedCards = true\r\n            }\r\n        }\r\n        return [id, onRenderComplete]\r\n    }\r\n\r\n    focusField(fieldType, cb) {\r\n        this.hostedFields.focus(fieldType, cb)\r\n    }\r\n\r\n    clearField(fieldType, cb) {\r\n        this.hostedFields.clear(fieldType, cb)\r\n    }\r\n\r\n    setAttribute(fieldType, name, value) {\r\n        this.hostedFields.setAttribute({\r\n            field: fieldType,\r\n            attribute: name,\r\n            value,\r\n        })\r\n    }\r\n\r\n    onFieldEvent(eventName, event) {\r\n        const fieldHandlers = this.fieldHandlers[event.emittedBy]\r\n        if (fieldHandlers && fieldHandlers[eventName]) {\r\n            fieldHandlers[eventName](event.fields[event.emittedBy], event)\r\n        }\r\n        if (this.wrapperHandlers[eventName]) {\r\n            this.wrapperHandlers[eventName](event)\r\n        }\r\n    }\r\n\r\n    tokenize(options = {}) {\r\n        return new Promise((resolve, reject) => { // eslint-disable-line no-undef\r\n            this.hostedFields.tokenize(options, (err, payload) => {\r\n                if (err) {\r\n                    this.onError(err)\r\n                    reject(err)\r\n                } else {\r\n                    resolve(payload)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Api from './api';\r\n\r\nexport default class Braintree extends React.Component {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.node.isRequired,\r\n        onAuthorizationSuccess: PropTypes.func,\r\n        authorization: PropTypes.string,\r\n        getTokenRef: PropTypes.func,\r\n        onValidityChange: PropTypes.func,\r\n        onCardTypeChange: PropTypes.func,\r\n        onError: PropTypes.func,\r\n        styles: PropTypes.object,\r\n        className: PropTypes.string,\r\n        tagName: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n        tagName: 'div',\r\n    }\r\n\r\n    static childContextTypes = {\r\n        braintreeApi: PropTypes.instanceOf(Api),\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.api = new Api(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.api.setAuthorization(this.props.authorization, this.props.onAuthorizationSuccess);\r\n        if (this.props.getTokenRef) {\r\n            this.props.getTokenRef(this.api.tokenize.bind(this.api));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.api.teardown();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.api.setAuthorization(this.props.authorization, this.props.onAuthorizationSuccess);\r\n    }\r\n\r\n    tokenize(options) {\r\n        return this.api.tokenize(options);\r\n    }\r\n\r\n    getChildContext() {\r\n        return { braintreeApi: this.api };\r\n    }\r\n\r\n    render() {\r\n        const { className: providedClass, tagName: Tag } = this.props;\r\n        let className = 'braintree-hosted-fields-wrapper';\r\n        if (providedClass) { className += ` ${providedClass}`; }\r\n        return (\r\n            <Tag className={className}>\r\n                {this.props.children}\r\n            </Tag>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Api from './api';\r\n\r\nexport default class BraintreeHostedField extends React.Component {\r\n\r\n    static propTypes = {\r\n        type: PropTypes.oneOf([\r\n            'number', 'expirationDate', 'expirationMonth', 'expirationYear', 'cvv', 'postalCode', 'cardholderName',\r\n        ]).isRequired,\r\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n        placeholder: PropTypes.string,\r\n        className: PropTypes.string,\r\n        onCardTypeChange: PropTypes.func,\r\n        onValidityChange: PropTypes.func,\r\n        onNotEmpty: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onEmpty: PropTypes.func,\r\n        onBlur: PropTypes.func,\r\n        prefill: PropTypes.string,\r\n    }\r\n\r\n    static contextTypes = {\r\n        braintreeApi: PropTypes.instanceOf(Api),\r\n    }\r\n\r\n    state = {}\r\n\r\n    focus() {\r\n        this.context.braintreeApi.focusField(this.props.type);\r\n    }\r\n\r\n    clear() {\r\n        this.context.braintreeApi.clearField(this.props.type);\r\n    }\r\n\r\n    setPlaceholder(text) {\r\n        this.context.braintreeApi.setAttribute(this.props.type, 'placeholder', text);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const [ fieldId,  onRenderComplete ] = this.context.braintreeApi.checkInField(this.props);\r\n        this.setState({ fieldId }, onRenderComplete);\r\n    }\r\n\r\n    get className() {\r\n        const list = ['braintree-hosted-field'];\r\n        if (this.props.className) { list.push(this.props.className); }\r\n        return list.join(' ');\r\n    }\r\n\r\n    render() {\r\n        const { fieldId } = this.state;\r\n        if (!fieldId) { return null; }\r\n\r\n        return <div id={fieldId} className={this.className} />;\r\n    }\r\n}\r\n"],"names":["cap","string","charAt","toUpperCase","slice","BraintreeClientApi","constructor","authorization","styles","onAuthorizationSuccess","callbacks","fields","Object","create","_nextFieldId","fieldHandlers","wrapperHandlers","setAuthorization","teardown","keys","length","pendingAuthTimer","setTimeout","Braintree","err","clientInstance","onError","threeDSecure","console","log","BraintreeThreeDSecure","version","client","onDataCollectorInstanceReady","BraintreeDataCollector","kount","nextFieldId","HostedFields","hostedFields","forEach","eventName","on","ev","onFieldEvent","clearTimeout","checkInField","formatInput","maxlength","minlength","placeholder","select","type","prefill","id","rejectUnsupportedCards","handlers","onRenderComplete","selector","number","focusField","fieldType","cb","focus","clearField","clear","setAttribute","name","value","field","attribute","event","emittedBy","tokenize","options","Promise","resolve","reject","payload","React","Component","props","api","Api","componentDidMount","getTokenRef","bind","componentWillUnmount","componentDidUpdate","getChildContext","braintreeApi","render","className","providedClass","tagName","Tag","children","propTypes","PropTypes","node","isRequired","func","onValidityChange","onCardTypeChange","object","defaultProps","childContextTypes","instanceOf","BraintreeHostedField","state","context","setPlaceholder","text","fieldId","setState","list","push","join","oneOf","oneOfType","onNotEmpty","onFocus","onEmpty","onBlur","contextTypes"],"mappings":"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"}