{"version":3,"file":"build.full.js","sources":["../src/api.js","../src/braintree.jsx","../src/field.jsx"],"sourcesContent":["import Braintree from 'braintree-web/client'\nimport HostedFields from 'braintree-web/hosted-fields'\nimport BraintreeDataCollector from 'braintree-web/data-collector'\nimport BraintreeThreeDSecure from 'braintree-web/three-d-secure';\n\nfunction cap(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport default class BraintreeClientApi {\n\n    fields = Object.create(null);\n\n    _nextFieldId = 0;\n\n    fieldHandlers = Object.create(null);\n\n    constructor({\n        authorization, styles, onAuthorizationSuccess, ...callbacks\n    }) {\n        this.styles = styles || {}\n        this.wrapperHandlers = callbacks || {}\n        this.setAuthorization(authorization, onAuthorizationSuccess)\n    }\n\n    setAuthorization(authorization, onAuthorizationSuccess) {\n        if (!authorization && this.authorization) {\n            this.teardown()\n        } else if (authorization && authorization !== this.authorization) {\n            // fields have not yet checked in, delay setting so they can register\n            if (0 === Object.keys(this.fields).length && !this.pendingAuthTimer) {\n                this.pendingAuthTimer = setTimeout(() => {\n                    this.pendingAuthTimer = null\n                    this.setAuthorization(authorization, onAuthorizationSuccess)\n                }, 5)\n                return\n            }\n\n            if (this.authorization) { this.teardown() }\n            this.authorization = authorization\n            Braintree.create({ authorization }, (err, clientInstance) => {\n                if (err) {\n                    this.onError(err)\n                } else {\n                    this.create(clientInstance, onAuthorizationSuccess)\n\n                    if (this.wrapperHandlers.threeDSecure) {\n                      console.log(\"BraintreeThreeDSecure\", BraintreeThreeDSecure, clientInstance)\n                      BraintreeThreeDSecure.create({\n                        version: this.wrapperHandlers.threeDSecureVersion || 2, // Will use 3DS2 whenever possible\n                        client: clientInstance\n                      }, this.wrapperHandlers.threeDSecure);\n                    }\n\n                    if (this.wrapperHandlers.onDataCollectorInstanceReady) {\n                        BraintreeDataCollector.create({\n                            client: clientInstance,\n                            kount: true,\n                        }, this.wrapperHandlers.onDataCollectorInstanceReady)\n                    }\n                }\n            })\n        }\n    }\n\n    nextFieldId() {\n        this._nextFieldId += 1\n        return this._nextFieldId\n    }\n\n    onError(err) {\n        if (!err) { return }\n        if (this.wrapperHandlers.onError) { this.wrapperHandlers.onError(err) }\n    }\n\n    create(client, onAuthorizationSuccess) {\n        this.client = client\n        HostedFields.create({\n            client,\n            styles: this.styles,\n            fields: this.fields,\n        }, (err, hostedFields) => {\n            if (err) {\n                this.onError(err)\n                return\n            }\n            this.hostedFields = hostedFields;\n            [\n                'blur', 'focus', 'empty', 'notEmpty',\n                'cardTypeChange', 'validityChange',\n            ].forEach((eventName) => {\n                hostedFields.on(eventName, ev => this.onFieldEvent(`on${cap(eventName)}`, ev))\n            })\n            this.onError(err)\n\n            if (onAuthorizationSuccess) {\n                onAuthorizationSuccess()\n            }\n        })\n    }\n\n    teardown() {\n        if (this.hostedFields) { this.hostedFields.teardown() }\n        if (this.pendingAuthTimer) {\n            clearTimeout(this.pendingAuthTimer)\n            this.pendingAuthTimer = null\n        }\n    }\n\n    checkInField({\n        formatInput,\n        maxlength,\n        minlength,\n        placeholder,\n        select,\n        type,\n        prefill,\n        id = `braintree-field-wrapper-${this.nextFieldId()}`,\n        rejectUnsupportedCards,\n        ...handlers\n    }) {\n        const onRenderComplete = () => {\n            this.fieldHandlers[type] = handlers\n            this.fields[type] = {\n                formatInput,\n                maxlength,\n                minlength,\n                placeholder,\n                select,\n                prefill,\n                selector: `#${id}`,\n            }\n            if (('number' === type) && rejectUnsupportedCards) {\n                this.fields.number.rejectUnsupportedCards = true\n            }\n        }\n        return [id, onRenderComplete]\n    }\n\n    focusField(fieldType, cb) {\n        this.hostedFields.focus(fieldType, cb)\n    }\n\n    clearField(fieldType, cb) {\n        this.hostedFields.clear(fieldType, cb)\n    }\n\n    setAttribute(fieldType, name, value) {\n        this.hostedFields.setAttribute({\n            field: fieldType,\n            attribute: name,\n            value,\n        })\n    }\n\n    onFieldEvent(eventName, event) {\n        const fieldHandlers = this.fieldHandlers[event.emittedBy]\n        if (fieldHandlers && fieldHandlers[eventName]) {\n            fieldHandlers[eventName](event.fields[event.emittedBy], event)\n        }\n        if (this.wrapperHandlers[eventName]) {\n            this.wrapperHandlers[eventName](event)\n        }\n    }\n\n    tokenize(options = {}) {\n        return new Promise((resolve, reject) => { // eslint-disable-line no-undef\n            this.hostedFields.tokenize(options, (err, payload) => {\n                if (err) {\n                    this.onError(err)\n                    reject(err)\n                } else {\n                    resolve(payload)\n                }\n            })\n        })\n    }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Api from './api';\n\nexport default class Braintree extends React.Component {\n\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        onAuthorizationSuccess: PropTypes.func,\n        authorization: PropTypes.string,\n        getTokenRef: PropTypes.func,\n        onValidityChange: PropTypes.func,\n        onCardTypeChange: PropTypes.func,\n        onError: PropTypes.func,\n        styles: PropTypes.object,\n        className: PropTypes.string,\n        tagName: PropTypes.string,\n    }\n\n    static defaultProps = {\n        tagName: 'div',\n    }\n\n    static childContextTypes = {\n        braintreeApi: PropTypes.instanceOf(Api),\n    }\n\n    constructor(props) {\n        super(props);\n        this.api = new Api(props);\n    }\n\n    componentDidMount() {\n        this.api.setAuthorization(this.props.authorization, this.props.onAuthorizationSuccess);\n        if (this.props.getTokenRef) {\n            this.props.getTokenRef(this.api.tokenize.bind(this.api));\n        }\n    }\n\n    componentWillUnmount() {\n        this.api.teardown();\n    }\n\n    componentDidUpdate() {\n        this.api.setAuthorization(this.props.authorization, this.props.onAuthorizationSuccess);\n    }\n\n    tokenize(options) {\n        return this.api.tokenize(options);\n    }\n\n    getChildContext() {\n        return { braintreeApi: this.api };\n    }\n\n    render() {\n        const { className: providedClass, tagName: Tag } = this.props;\n        let className = 'braintree-hosted-fields-wrapper';\n        if (providedClass) { className += ` ${providedClass}`; }\n        return (\n            <Tag className={className}>\n                {this.props.children}\n            </Tag>\n        );\n    }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Api from './api';\n\nexport default class BraintreeHostedField extends React.Component {\n\n    static propTypes = {\n        type: PropTypes.oneOf([\n            'number', 'expirationDate', 'expirationMonth', 'expirationYear', 'cvv', 'postalCode', 'cardholderName',\n        ]).isRequired,\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        placeholder: PropTypes.string,\n        className: PropTypes.string,\n        onCardTypeChange: PropTypes.func,\n        onValidityChange: PropTypes.func,\n        onNotEmpty: PropTypes.func,\n        onFocus: PropTypes.func,\n        onEmpty: PropTypes.func,\n        onBlur: PropTypes.func,\n        prefill: PropTypes.string,\n    }\n\n    static contextTypes = {\n        braintreeApi: PropTypes.instanceOf(Api),\n    }\n\n    state = {}\n\n    focus() {\n        this.context.braintreeApi.focusField(this.props.type);\n    }\n\n    clear() {\n        this.context.braintreeApi.clearField(this.props.type);\n    }\n\n    setPlaceholder(text) {\n        this.context.braintreeApi.setAttribute(this.props.type, 'placeholder', text);\n    }\n\n    componentDidMount() {\n        const [ fieldId,  onRenderComplete ] = this.context.braintreeApi.checkInField(this.props);\n        this.setState({ fieldId }, onRenderComplete);\n    }\n\n    get className() {\n        const list = ['braintree-hosted-field'];\n        if (this.props.className) { list.push(this.props.className); }\n        return list.join(' ');\n    }\n\n    render() {\n        const { fieldId } = this.state;\n        if (!fieldId) { return null; }\n\n        return <div id={fieldId} className={this.className} />;\n    }\n}\n"],"names":["cap","string","charAt","toUpperCase","slice","BraintreeClientApi","constructor","authorization","styles","onAuthorizationSuccess","callbacks","fields","Object","create","_nextFieldId","fieldHandlers","wrapperHandlers","setAuthorization","teardown","keys","length","pendingAuthTimer","setTimeout","Braintree","err","clientInstance","onError","threeDSecure","console","log","BraintreeThreeDSecure","version","threeDSecureVersion","client","onDataCollectorInstanceReady","BraintreeDataCollector","kount","nextFieldId","HostedFields","hostedFields","forEach","eventName","on","ev","onFieldEvent","clearTimeout","checkInField","formatInput","maxlength","minlength","placeholder","select","type","prefill","id","rejectUnsupportedCards","handlers","onRenderComplete","selector","number","focusField","fieldType","cb","focus","clearField","clear","setAttribute","name","value","field","attribute","event","emittedBy","tokenize","options","Promise","resolve","reject","payload","React","Component","props","api","Api","componentDidMount","getTokenRef","bind","componentWillUnmount","componentDidUpdate","getChildContext","braintreeApi","render","className","providedClass","tagName","Tag","children","propTypes","PropTypes","node","isRequired","func","onValidityChange","onCardTypeChange","object","defaultProps","childContextTypes","instanceOf","BraintreeHostedField","state","context","setPlaceholder","text","fieldId","setState","list","push","join","oneOf","oneOfType","onNotEmpty","onFocus","onEmpty","onBlur","contextTypes"],"mappings":"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"}